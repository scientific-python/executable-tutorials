name: Test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  schedule:
    - cron: '0 5 * * 1'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tox_test:
    name: tox on ${{ matrix.os }} with ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Run all supported OS for one Python version.
        # The test additional Python versions on Linux only.
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12']
        toxenv: [py312-test]
        name: ['Python 3.12',]

        include:
          - python-version: '3.11'
            toxenv: py311-test-oldestdeps
            name: Python 3.11 and oldest versioned dependencies
            os: ubuntu-latest

          - python-version: '3.13'
            toxenv: py313-test-devdeps
            name: Python 3.13 and developer versioned dependencies
            os: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: python -m pip install --upgrade tox

    - name: Test with tox
      run: tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}

  tox_build:
    name: Build static site with tox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: python -m pip install --upgrade tox

      - name: Build static site
        run: tox -e py312-buildhtml

  pixi_test:
    name: pixi on ${{ matrix.os }} with ${{ matrix.environment}}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Run all supported OS for one Python version, then add a few extra scenarios
        os: [ubuntu-latest, macos-latest, windows-latest]
        environment: [py311, py312]
    steps:
    - uses: actions/checkout@v4

    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1

    - name: Test all files
      run: pixi run test

  pixi_build:
    name: Build static site with pixi
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1

    - name: Build static site
      run: pixi run build

  myst_build:
    name: Build and execute static site with myst
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup environment
      run: pip install -r requirements.txt
    - name: Build site with execution
      run: |
        myst build --execute 2>&1 |tee /tmp/mystbuild.log
        if grep -q "Traceback .most recent call last." /tmp/mystbuild.log; then
            exit 1;
        else
            exit 0;
        fi
